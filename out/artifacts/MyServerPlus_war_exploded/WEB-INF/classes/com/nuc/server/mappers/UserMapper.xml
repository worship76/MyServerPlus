<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuc.server.dao.UserDao">
    <resultMap type="User" id="UserResult">
        <result property="id" column="id"/>
        <result property="userName" column="userName"/>
        <result property="password" column="password"/>
        <result property="num" column="num"/>
        <result property="sid" column="sid"/>
        <result property="role" column="role"/>
    </resultMap>


    <select id="count" parameterType="Integer" resultType="Integer">
        select count(*) from user
    </select>


    <!--public User login_android(String username,String password);-->
    <select id="login_android" parameterType="String" resultMap="UserResult">
        select * from user where userName=#{0} and password=#{1}
    </select>

    <!--public User register_android(Integer id,String userName,String password,String num,Integer sid,String role);-->
    <insert id="register_android" parameterType="User">
        insert into user values (#{0},#{1},#{2},#{3},#{4},#{5})
    </insert>

    <!--public void updateMessage_android(String userName,String num,Integer id);-->
    <update id="updateMessage_android" parameterType="User">
        update user set userName=#{0},num = #{1} where id = #{2}
    </update>

    <!--public void updatePsd_android(String password,Integer id);-->
    <update id="updatePsd_android" parameterType="User">
        update user set password=#{0} where id=#{1}
    </update>

    <!--public User select(String userName);-->
    <select id="select" parameterType="User" resultMap="UserResult">
        select * from user where userName=#{userName}
    </select>

    <select id="login" parameterType="User" resultMap="UserResult">
        select * from
        user where userName=#{userName} and password=#{password} limit 1
    </select>

    <select id="findUsers" parameterType="Map" resultMap="UserResult">
        select * from user where userName = #{userName}
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="findAllUsers" parameterType="Map" resultMap="UserResult">
        select * from user
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getTotalUser" parameterType="Map" resultType="Long">
        select count(*) from user
        <where>
            <if test="userName!=null and userName!='' ">
                userName like #{userName}
            </if>
        </where>
    </select>

    <insert id="addUser" parameterType="User">
        insert into user(userName,password,num,sid,role)
        values(#{userName},#{password},#{num},#{sid},#{role})
    </insert>

    <update id="updateUser" parameterType="User">
        update user
        <set>
            <if test="userName!=null and userName!='' ">
                userName=#{userName},
            </if>
            <if test="password!=null and password!='' ">
                password=#{password},
            </if>
            <if test="num!=null">
                num=#{num},
            </if>
            <if test="sid!=null">
                sid=#{sid},
            </if>
            <if test="role!=null and role!='' ">
                role=#{role}
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="Integer">
        delete from user
        where id=#{id}
    </delete>
</mapper> 